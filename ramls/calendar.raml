#%RAML 0.8
title: Calendar
version: v1
baseUri: https://github.com/folio-org/mod-calendar

documentation:
  - title: mod-calendar API
    content: This module provides a backend for the calendar functionalities

schemas:
  - Opening.json: !include schemas/Opening.json
  - OpeningCollection: !include schemas/OpeningCollection.json
  - OpeningDay.json: !include schemas/OpeningDay.json
  - OpeningDayIncludeWeekdays.json: !include schemas/OpeningDayIncludeWeekdays.json
  - OpeningHour.json: !include schemas/OpeningHour.json
  - Weekdays.json: !include schemas/Weekdays.json
  - OpeningHours.json: !include schemas/OpeningHours.json
  - OpeningHoursCollection: !include schemas/OpeningHoursCollection.json
  - errors: !include raml-util/schemas/errors.schema
  - error.schema: !include raml-util/schemas/error.schema
  - parameters.schema: !include raml-util/schemas/parameters.schema
  - raml-util/schemas/metadata.schema: !include raml-util/schemas/metadata.schema

traits:
  - secured: !include raml-util/traits/auth.raml
  - language: !include raml-util/traits/language.raml
  - pageable: !include raml-util/traits/pageable.raml
  - validate: !include raml-util/traits/validation.raml

resourceTypes:
  - collection: !include raml-util/rtypes/collection.raml
  - collection-item: !include raml-util/rtypes/item-collection.raml
  - get-only: !include raml-util/rtypes/get-only.raml

/calendar:
  /periods:
    type:
      get-only:
        exampleCollection: !include examples/opening_hours_collection_get.json
        schema: OpeningHoursCollection

    get:
      is: [pageable]
      queryParameters:
        servicePointId:
          displayName: servicePointId
          type: string
          description: "Filter for service point. In case of parameter absence all service point will be included in response."
          required: false
        startDate:
          displayName: startDate
          type: string
          description: "Filter for start date (ISO 8601 date format). The parameter is inclusive."
          example: "2018-05-01"
          required: false
        endDate:
          displayName: endDate
          type: string
          description: "Filter for end date (ISO 8601 date format). The parameter is inclusive."
          example: "2018-05-31"
          required: false
        includeClosedDays:
          displayName: includeClosedDays
          type: boolean
          description: "In case of true all days will have value even if it is closing time or not"
          required: false
          default: true
        actualOpening:
          displayName: actualOpening
          type: boolean
          description: "In case of true exceptional openings are overriding regular opening and in this case regular opening is not included in the response"
          required: false
          default: true
      description: "List actual opening hours including exceptions for custom date range.
                    Mainly used by calendar display and provides opening information for loan rules.
                    The response contains only the openings closed times are not included."
      responses:
        200:
          body:
            application/json:
              schema: OpeningHoursCollection
        404:
          description: "Not found. There is no service point with the given ID"
        500:
          description: "Internal server error"

    /{servicePointId}:
      /period:
        type:
          collection:
            exampleCollection: !include examples/opening_collection_get.json
            schemaCollection: OpeningCollection
            schemaItem: Opening.json
            exampleItem: !include examples/opening_get.json
        get:
          queryParameters:
            withOpeningDays:
              displayName: withOpeningDays
              type: boolean
              description: "Include opening days in response."
              required: false
              default: false
            showPast:
              displayName: showPast
              type: boolean
              description: "Include past openings in response."
              required: false
              default: false
            showExceptional:
              displayName: showExceptional
              type: boolean
              description: "Filter for exceptional library hours periods."
              required: false
              default: false
          description: "List library hours period. The default response contains the period names and its dates."
          responses:
            200:
              body:
                application/json:
                  schema: OpeningCollection
            404:
              description: "Not found. There is no service point with the given ID"
            500:
              description: "Internal server error"
        post:
          is: [validate]
          body:
            application/json:
              schema: Opening.json
          description: "Saves the new library period"
          responses:
            201:
              description: "Returns with the created period"
              body:
                application/json:
                  schema: Opening.json
            400:
              description: "Bad request"
            500:
              description: "Internal server error"

        /{periodId}:
          type:
            collection-item:
              exampleItem: !include examples/opening_get.json
              schema: Opening.json
          get:
            description: "List opening hours for given periodId."
            responses:
              200:
                body:
                  application/json:
                    schema: Opening.json
              404:
                description: "Library hours period or service point with the given ID is not found"
              500:
                description: "Internal server error"
          delete:
            description: Delete Opening hours by Id
            responses:
              204:
               description: "Library hours period was deleted successfully"
              404:
                description: "Library hours period or service point with the given ID is not found"
              400:
                description: "Bad request, e.g. malformed request body or query parameter. Details of the error (e.g. name of the parameter or line/character number with malformed data) provided in the response."
              500:
                description: "Internal server error, e.g. due to misconfiguration"
          put:
            is: [validate]
            description: "Update library period by periodId"
            body:
              application/json:
                  schema: Opening.json
            responses:
              204:
                description: "Library period successfully updated"
                body:
                  application/json:
                    schema: Opening.json
              404:
                description: "Library period id or service point with the given ID is not found"
              400:
                description: "Bad request, e.g. malformed request body or query parameter. Details of the error (e.g. name of the parameter or line/character number with malformed data) provided in the response."
              500:
                description: "Internal server error, e.g. due to misconfiguration"

      /calculateopening:
        is: [language]
        get:
          queryParameters:
            startDate:
              displayName: startDate
              type: string
              description: "loan start date"
              example: "2018-11-15"
              required: true
            unit:
              displayName: unit
              type: string
              enum: ["day", "hour"]
              description: "Calculate in days or hours. Default: day."
              example: day
              required: false
            amount:
              displayName: amount
              type: integer
              description: "number of loan days or hours (based on unit), to calculate due date."
              example: 11
              required: true
          description: "This endpoint helps to calculate due date. The response contains three openings: the requested day,
          next and previous dates openings which are closest to the requested day. Calculation can based on days or hours
          to calculate overnight loans.
          In case of existing amount parameter the requested day will be calculated: date + amount * unit otherwise it returns the date itself"
          responses:
            200:
              body:
                application/json:
                  schema: Opening.json
            400:
              body:
                text/plain:
              description: "Bad request, e.g. malformed request body or query parameter. Details of the error (e.g. name of the parameter or line/character number with malformed data) provided in the response."
            404:
              description: "Not found"
            500:
              description: "Internal server error"
